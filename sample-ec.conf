; Configuration settings related to server endpoints, including both gRPC and REST
; servers.
[server]
; The host address for the gRPC server. Specify the IP address or hostname that
; the gRPC server will bind to. Default is '[::]', which represents all available
; network interfaces.
grpc_server_host = [::]

; The port number for the gRPC server. This is the port on which the gRPC server
; will listen for incoming connections.
grpc_server_port = :50050

; The host address for the RESTful server interface provided via gRPC Gateway. It
; determines the network address the HTTP server binds to. Default is '[::]',
; which represents all available network interfaces.
rest_server_host = [::]

; The port number for the RESTful HTTP server. This port will be used for handling
; HTTP requests that are translated into gRPC calls.
rest_server_port = :8081

; The duration threshold for history data pair, by default set to 7 days. If
; historical data pair exceed this threshold, It is considered too old and will be
; removed from the database. This threshold is also used to validate and sanitize
; against the mission control data being registered.
history_threshold_duration = 168h0m0s

; The interval for cleaning up stale mission control data from the database, by
; default set to 24 hours i.e. the cleanup will happen every day.
stale_data_cleanup_interval = 24h0m0s

; The default number of pairs to be sent in each batch when querying the
; aggregated mission control data. The size of a given mission control pair is
; ~114 bytes as defined in the proto file. With the default value of 4600 pairs,
; the batch size would be approximately 512 KB (1/2 MB).
query_mission_control_batch_size = 4600

; Configuration for the pprof server used for monitoring and profiling the
; application.
[pprof]
; The host address for the pprof server, used for profiling and monitoring the
; application. By default The server only binds to the localhost.
pprof_server_host = localhost

; The port number on which the pprof server will listen. pprof provides runtime
; profiling data via a web interface.
pprof_server_port = :6060

; Configuration related to Transport Layer Security (TLS), including settings for
; both self-signed and third-party certificates.
[tls]
; Directory path where self-signed TLS certificates are stored. This path is
; typically used when no third-party certificates are provided.
self_signed_tls_dir_path = /home/ecuser/.ec

; Filename of the self-signed TLS certificate used by the server. It should be
; located within the directory specified in 'self_signed_tls_dir_path'.
self_signed_tls_cert_file = tls.cert

; Filename of the private key corresponding to the self-signed TLS certificate.
self_signed_tls_key_file = tls.key

; Directory path that stores third-party TLS certificates, if available. This is
; used when certificates are provided by an external certificate authority.
third_party_tls_dir_path = /home/ecuser/.ec/third_party_tls

; Filename of the third-party TLS certificate. This certificate is used if
; available, falling back to self-signed if not.
third_party_tls_cert_file =

; Filename of the private key for the third-party TLS certificate.
third_party_tls_key_file =

; The domain name associated with this TLS configuration. This is used to
; determine the correct certificate and key for the given domain.
tls_domain_name = localhost

; Database configuration settings, including the path, filename, and operational
; parameters like timeouts and batch sizes.
[database]
; The filesystem path to the directory where the database file is stored. Ensures
; all database operations are confined to this directory.
database_dir_path = /home/ecuser/.ec/data

; The filename of the database where mission control data is persisted.
database_file = mission_control.db

; The maximum time to wait for acquiring a database file lock before the operation
; times out. This setting is crucial for preventing deadlocks and ensuring smooth
; database operation under concurrent access conditions.
file_lock_timeout = 5s

; The maximum number of database operations to batch together. This can improve
; performance by reducing the number of writes to disk.
max_batch_size = 1000

; The maximum delay before a batch of database operations is committed. Balancing
; this delay can help in optimizing the responsiveness and throughput of the
; database.
max_batch_delay = 10ms

; Logging configuration, specifying the path, file, and level of logging detail.
[log]
; Directory where log files are stored. Centralizes logging output to this
; location for easier management and review.
log_dir_path = /home/ecuser/.ec/logs

; Filename for the log file where runtime information and errors are recorded.
log_file = ec.log

; The level of logging detail. Options are 'fatal', 'error', 'warn', 'warning',
; 'info', 'debug'. Lower levels provide more detailed output for troubleshooting
; and higher levels provide condensed output for general monitoring.
log_level = info
